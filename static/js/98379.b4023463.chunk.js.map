{"version":3,"file":"static/js/98379.b4023463.chunk.js","mappings":"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","sources":["../node_modules/thirdweb/src/react/web/ui/components/FadeIn.tsx","../node_modules/input-otp/src/regexp.ts","../node_modules/input-otp/src/use-pwm-badge.tsx","../node_modules/input-otp/src/input.tsx","../node_modules/input-otp/src/use-previous.ts","../node_modules/input-otp/src/sync-timeouts.ts","../node_modules/thirdweb/src/react/web/ui/components/OTPInput.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletOTPLoginUI.tsx","../node_modules/thirdweb/src/react/web/ui/ConnectWallet/icons/FingerPrintIcon.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletPassKeyLogin.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletSocialLogin.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletConnectUI.tsx","../node_modules/thirdweb/src/wallets/in-app/web/lib/auth/index.ts"],"sourcesContent":["import { fadeInAnimation } from \"../design-system/animations.js\";\nimport { StyledDiv } from \"../design-system/elements.js\";\n\nexport const FadeIn = /* @__PURE__ */ StyledDiv({\n  animation: `${fadeInAnimation} 0.15s ease-in`,\n});\n","export const REGEXP_ONLY_DIGITS = '^\\\\d+$'\nexport const REGEXP_ONLY_CHARS = '^[a-zA-Z]+$'\nexport const REGEXP_ONLY_DIGITS_AND_CHARS = '^[a-zA-Z0-9]+$'\n","import * as React from 'react'\nimport { OTPInputProps } from './types'\n\nconst PWM_BADGE_MARGIN_RIGHT = 18\nconst PWM_BADGE_SPACE_WIDTH_PX = 40\nconst PWM_BADGE_SPACE_WIDTH = `${PWM_BADGE_SPACE_WIDTH_PX}px` as const\n\nconst PASSWORD_MANAGERS_SELECTORS = [\n  '[data-lastpass-icon-root]', // LastPass\n  'com-1password-button', // 1Password\n  '[data-dashlanecreated]', // Dashlane\n  '[style$=\"2147483647 !important;\"]', // Bitwarden\n].join(',')\n\nexport function usePasswordManagerBadge({\n  containerRef,\n  inputRef,\n  pushPasswordManagerStrategy,\n  isFocused,\n}: {\n  containerRef: React.RefObject<HTMLDivElement>\n  inputRef: React.RefObject<HTMLInputElement>\n  pushPasswordManagerStrategy: OTPInputProps['pushPasswordManagerStrategy']\n  isFocused: boolean\n}) {\n  // Metadata for instant updates (not React state)\n  const pwmMetadata = React.useRef<{\n    done: boolean\n    refocused: boolean\n  }>({\n    done: false,\n    refocused: false,\n  })\n\n  /** Password managers have a badge\n   *  and I'll use this state to push them\n   *  outside the input */\n  const [hasPWMBadge, setHasPWMBadge] = React.useState(false)\n  const [hasPWMBadgeSpace, setHasPWMBadgeSpace] = React.useState(false)\n  const [done, setDone] = React.useState(false)\n\n  const willPushPWMBadge = React.useMemo(() => {\n    if (pushPasswordManagerStrategy === 'none') {\n      return false\n    }\n\n    const increaseWidthCase =\n      (pushPasswordManagerStrategy === 'increase-width' ||\n        // TODO: remove 'experimental-no-flickering' support in 2.0.0\n        pushPasswordManagerStrategy === 'experimental-no-flickering') &&\n      hasPWMBadge &&\n      hasPWMBadgeSpace\n\n    return increaseWidthCase\n  }, [hasPWMBadge, hasPWMBadgeSpace, pushPasswordManagerStrategy])\n\n  const trackPWMBadge = React.useCallback(() => {\n    const container = containerRef.current\n    const input = inputRef.current\n    if (\n      !container ||\n      !input ||\n      done ||\n      pushPasswordManagerStrategy === 'none'\n    ) {\n      return\n    }\n\n    const elementToCompare = container\n\n    // Get the top right-center point of the container.\n    // That is usually where most password managers place their badge.\n    const rightCornerX =\n      elementToCompare.getBoundingClientRect().left +\n      elementToCompare.offsetWidth\n    const centereredY =\n      elementToCompare.getBoundingClientRect().top +\n      elementToCompare.offsetHeight / 2\n    const x = rightCornerX - PWM_BADGE_MARGIN_RIGHT\n    const y = centereredY\n\n    // Do an extra search to check for famous password managers\n    const pmws = document.querySelectorAll(PASSWORD_MANAGERS_SELECTORS)\n\n    // If no password manager is automatically detect,\n    // we'll try to dispatch document.elementFromPoint\n    // to identify badges\n    if (pmws.length === 0) {\n      const maybeBadgeEl = document.elementFromPoint(x, y)\n\n      // If the found element is the input itself,\n      // then we assume it's not a password manager badge.\n      // We are not sure. Most times that means there isn't a badge.\n      if (maybeBadgeEl === container) {\n        return\n      }\n    }\n\n    setHasPWMBadge(true)\n    setDone(true)\n\n    // For specific password managers,\n    // the input has to be re-focused\n    // to trigger a re-position of the badge.\n    if (!pwmMetadata.current.refocused && document.activeElement === input) {\n      const sel = [input.selectionStart, input.selectionEnd]\n      input.blur()\n      input.focus()\n      // Recover the previous selection\n      input.setSelectionRange(sel[0], sel[1])\n\n      pwmMetadata.current.refocused = true\n    }\n  }, [containerRef, inputRef, done, pushPasswordManagerStrategy])\n\n  React.useEffect(() => {\n    const container = containerRef.current\n    if (!container || pushPasswordManagerStrategy === 'none') {\n      return\n    }\n\n    // Check if the PWM area is 100% visible\n    function checkHasSpace() {\n      const viewportWidth = window.innerWidth\n      const distanceToRightEdge =\n        viewportWidth - container.getBoundingClientRect().right\n      setHasPWMBadgeSpace(distanceToRightEdge >= PWM_BADGE_SPACE_WIDTH_PX)\n    }\n\n    checkHasSpace()\n    const interval = setInterval(checkHasSpace, 1000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [containerRef, pushPasswordManagerStrategy])\n\n  React.useEffect(() => {\n    const _isFocused = isFocused || document.activeElement === inputRef.current\n\n    if (pushPasswordManagerStrategy === 'none' || !_isFocused) {\n      return\n    }\n    const t1 = setTimeout(trackPWMBadge, 0)\n    const t2 = setTimeout(trackPWMBadge, 2000)\n    const t3 = setTimeout(trackPWMBadge, 5000)\n    const t4 = setTimeout(() => {\n      setDone(true)\n    }, 6000)\n    return () => {\n      clearTimeout(t1)\n      clearTimeout(t2)\n      clearTimeout(t3)\n      clearTimeout(t4)\n    }\n  }, [inputRef, isFocused, pushPasswordManagerStrategy, trackPWMBadge])\n\n  return { hasPWMBadge, willPushPWMBadge, PWM_BADGE_SPACE_WIDTH }\n}\n","'use client'\n\nimport * as React from 'react'\n\nimport { REGEXP_ONLY_DIGITS } from './regexp'\nimport { syncTimeouts } from './sync-timeouts'\nimport { OTPInputProps, RenderProps } from './types'\nimport { usePrevious } from './use-previous'\nimport { usePasswordManagerBadge } from './use-pwm-badge'\n\nexport const OTPInputContext = React.createContext<RenderProps>(\n  {} as RenderProps,\n)\n\nexport const OTPInput = React.forwardRef<HTMLInputElement, OTPInputProps>(\n  (\n    {\n      value: uncheckedValue,\n      onChange: uncheckedOnChange,\n      maxLength,\n      textAlign = 'left',\n      pattern = REGEXP_ONLY_DIGITS,\n      inputMode = 'numeric',\n      onComplete,\n      pushPasswordManagerStrategy = 'increase-width',\n      containerClassName,\n      noScriptCSSFallback = NOSCRIPT_CSS_FALLBACK,\n\n      render,\n      children,\n\n      ...props\n    },\n    ref,\n  ) => {\n    // Only used when `value` state is not provided\n    const [internalValue, setInternalValue] = React.useState(\n      typeof props.defaultValue === 'string' ? props.defaultValue : '',\n    )\n\n    // Definitions\n    const value = uncheckedValue ?? internalValue\n    const previousValue = usePrevious(value)\n    const onChange = React.useCallback(\n      (newValue: string) => {\n        uncheckedOnChange?.(newValue)\n        setInternalValue(newValue)\n      },\n      [uncheckedOnChange],\n    )\n    const regexp = React.useMemo(\n      () =>\n        pattern\n          ? typeof pattern === 'string'\n            ? new RegExp(pattern)\n            : pattern\n          : null,\n      [pattern],\n    )\n\n    /** useRef */\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const containerRef = React.useRef<HTMLDivElement>(null)\n    const initialLoadRef = React.useRef({\n      value,\n      onChange,\n      isIOS:\n        typeof window !== 'undefined' &&\n        window?.CSS?.supports?.('-webkit-touch-callout', 'none'),\n    })\n    const inputMetadataRef = React.useRef<{\n      prev: [number | null, number | null, 'none' | 'forward' | 'backward']\n    }>({\n      prev: [\n        inputRef.current?.selectionStart,\n        inputRef.current?.selectionEnd,\n        inputRef.current?.selectionDirection,\n      ],\n    })\n    React.useImperativeHandle(ref, () => inputRef.current, [])\n    React.useEffect(() => {\n      const input = inputRef.current\n      const container = containerRef.current\n\n      if (!input || !container) {\n        return\n      }\n\n      // Sync input value\n      if (initialLoadRef.current.value !== input.value) {\n        initialLoadRef.current.onChange(input.value)\n      }\n\n      // Previous selection\n      inputMetadataRef.current.prev = [\n        input.selectionStart,\n        input.selectionEnd,\n        input.selectionDirection,\n      ]\n      function onDocumentSelectionChange() {\n        if (document.activeElement !== input) {\n          setMirrorSelectionStart(null)\n          setMirrorSelectionEnd(null)\n          return\n        }\n\n        // Aliases\n        const _s = input.selectionStart\n        const _e = input.selectionEnd\n        const _dir = input.selectionDirection\n        const _ml = input.maxLength\n        const _val = input.value\n        const _prev = inputMetadataRef.current.prev\n\n        // Algorithm\n        let start = -1\n        let end = -1\n        let direction: 'forward' | 'backward' | 'none' = undefined\n        if (_val.length !== 0 && _s !== null && _e !== null) {\n          const isSingleCaret = _s === _e\n          const isInsertMode = _s === _val.length && _val.length < _ml\n\n          if (isSingleCaret && !isInsertMode) {\n            const c = _s\n            if (c === 0) {\n              start = 0\n              end = 1\n              direction = 'forward'\n            } else if (c === _ml) {\n              start = c - 1\n              end = c\n              direction = 'backward'\n            } else if (_ml > 1 && _val.length > 1) {\n              let offset = 0\n              if (_prev[0] !== null && _prev[1] !== null) {\n                direction = c < _prev[1] ? 'backward' : 'forward'\n                const wasPreviouslyInserting =\n                  _prev[0] === _prev[1] && _prev[0] < _ml\n                if (direction === 'backward' && !wasPreviouslyInserting) {\n                  offset = -1\n                }\n              }\n\n              start = offset + c\n              end = offset + c + 1\n            }\n          }\n\n          if (start !== -1 && end !== -1 && start !== end) {\n            inputRef.current.setSelectionRange(start, end, direction)\n          }\n        }\n\n        // Finally, update the state\n        const s = start !== -1 ? start : _s\n        const e = end !== -1 ? end : _e\n        const dir = direction ?? _dir\n        setMirrorSelectionStart(s)\n        setMirrorSelectionEnd(e)\n        // Store the previous selection value\n        inputMetadataRef.current.prev = [s, e, dir]\n      }\n      document.addEventListener('selectionchange', onDocumentSelectionChange, {\n        capture: true,\n      })\n\n      // Set initial mirror state\n      onDocumentSelectionChange()\n      document.activeElement === input && setIsFocused(true)\n\n      // Apply needed styles\n      if (!document.getElementById('input-otp-style')) {\n        const styleEl = document.createElement('style')\n        styleEl.id = 'input-otp-style'\n        document.head.appendChild(styleEl)\n\n        if (styleEl.sheet) {\n          const autofillStyles =\n            'background: transparent !important; color: transparent !important; border-color: transparent !important; opacity: 0 !important; box-shadow: none !important; -webkit-box-shadow: none !important; -webkit-text-fill-color: transparent !important;'\n\n          safeInsertRule(\n            styleEl.sheet,\n            '[data-input-otp]::selection { background: transparent !important; color: transparent !important; }',\n          )\n          safeInsertRule(\n            styleEl.sheet,\n            `[data-input-otp]:autofill { ${autofillStyles} }`,\n          )\n          safeInsertRule(\n            styleEl.sheet,\n            `[data-input-otp]:-webkit-autofill { ${autofillStyles} }`,\n          )\n          // iOS\n          safeInsertRule(\n            styleEl.sheet,\n            `@supports (-webkit-touch-callout: none) { [data-input-otp] { letter-spacing: -.6em !important; font-weight: 100 !important; font-stretch: ultra-condensed; font-optical-sizing: none !important; left: -1px !important; right: 1px !important; } }`,\n          )\n          // PWM badges\n          safeInsertRule(\n            styleEl.sheet,\n            `[data-input-otp] + * { pointer-events: all !important; }`,\n          )\n        }\n      }\n      // Track root height\n      const updateRootHeight = () => {\n        if (container) {\n          container.style.setProperty(\n            '--root-height',\n            `${input.clientHeight}px`,\n          )\n        }\n      }\n      updateRootHeight()\n      const resizeObserver = new ResizeObserver(updateRootHeight)\n      resizeObserver.observe(input)\n\n      return () => {\n        document.removeEventListener(\n          'selectionchange',\n          onDocumentSelectionChange,\n          { capture: true },\n        )\n        resizeObserver.disconnect()\n      }\n    }, [])\n\n    /** Mirrors for UI rendering purpose only */\n    const [isHoveringInput, setIsHoveringInput] = React.useState(false)\n    const [isFocused, setIsFocused] = React.useState(false)\n    const [mirrorSelectionStart, setMirrorSelectionStart] = React.useState<\n      number | null\n    >(null)\n    const [mirrorSelectionEnd, setMirrorSelectionEnd] = React.useState<\n      number | null\n    >(null)\n\n    /** Effects */\n    React.useEffect(() => {\n      syncTimeouts(() => {\n        // Forcefully remove :autofill state\n        inputRef.current?.dispatchEvent(new Event('input'))\n\n        // Update the selection state\n        const s = inputRef.current?.selectionStart\n        const e = inputRef.current?.selectionEnd\n        const dir = inputRef.current?.selectionDirection\n        if (s !== null && e !== null) {\n          setMirrorSelectionStart(s)\n          setMirrorSelectionEnd(e)\n          inputMetadataRef.current.prev = [s, e, dir]\n        }\n      })\n    }, [value, isFocused])\n\n    React.useEffect(() => {\n      if (previousValue === undefined) {\n        return\n      }\n\n      if (\n        value !== previousValue &&\n        previousValue.length < maxLength &&\n        value.length === maxLength\n      ) {\n        onComplete?.(value)\n      }\n    }, [maxLength, onComplete, previousValue, value])\n\n    const pwmb = usePasswordManagerBadge({\n      containerRef,\n      inputRef,\n      pushPasswordManagerStrategy,\n      isFocused,\n    })\n\n    /** Event handlers */\n    const _changeListener = React.useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.currentTarget.value.slice(0, maxLength)\n        if (newValue.length > 0 && regexp && !regexp.test(newValue)) {\n          e.preventDefault()\n          return\n        }\n        const maybeHasDeleted =\n          typeof previousValue === 'string' &&\n          newValue.length < previousValue.length\n        if (maybeHasDeleted) {\n          // Since cutting/deleting text doesn't trigger\n          // selectionchange event, we'll have to dispatch it manually.\n          // NOTE: The following line also triggers when cmd+A then pasting\n          // a value with smaller length, which is not ideal for performance.\n          document.dispatchEvent(new Event('selectionchange'))\n        }\n        onChange(newValue)\n      },\n      [maxLength, onChange, previousValue, regexp],\n    )\n    const _focusListener = React.useCallback(() => {\n      if (inputRef.current) {\n        const start = Math.min(inputRef.current.value.length, maxLength - 1)\n        const end = inputRef.current.value.length\n        inputRef.current?.setSelectionRange(start, end)\n        setMirrorSelectionStart(start)\n        setMirrorSelectionEnd(end)\n      }\n      setIsFocused(true)\n    }, [maxLength])\n    // Fix iOS pasting\n    const _pasteListener = React.useCallback(\n      (e: React.ClipboardEvent<HTMLInputElement>) => {\n        const input = inputRef.current\n        if (!initialLoadRef.current.isIOS || !e.clipboardData || !input) {\n          return\n        }\n\n        const content = e.clipboardData.getData('text/plain')\n        e.preventDefault()\n\n        const start = inputRef.current?.selectionStart\n        const end = inputRef.current?.selectionEnd\n\n        const isReplacing = start !== end\n\n        const newValueUncapped = isReplacing\n          ? value.slice(0, start) + content + value.slice(end) // Replacing\n          : value.slice(0, start) + content + value.slice(start) // Inserting\n        const newValue = newValueUncapped.slice(0, maxLength)\n\n        if (newValue.length > 0 && regexp && !regexp.test(newValue)) {\n          return\n        }\n\n        input.value = newValue\n        onChange(newValue)\n\n        const _start = Math.min(newValue.length, maxLength - 1)\n        const _end = newValue.length\n\n        input.setSelectionRange(_start, _end)\n        setMirrorSelectionStart(_start)\n        setMirrorSelectionEnd(_end)\n      },\n      [maxLength, onChange, regexp, value],\n    )\n\n    /** Styles */\n    const rootStyle = React.useMemo<React.CSSProperties>(\n      () => ({\n        position: 'relative',\n        cursor: props.disabled ? 'default' : 'text',\n        userSelect: 'none',\n        WebkitUserSelect: 'none',\n        pointerEvents: 'none',\n      }),\n      [props.disabled],\n    )\n\n    const inputStyle = React.useMemo<React.CSSProperties>(\n      () => ({\n        position: 'absolute',\n        inset: 0,\n        width: pwmb.willPushPWMBadge\n          ? `calc(100% + ${pwmb.PWM_BADGE_SPACE_WIDTH})`\n          : '100%',\n        clipPath: pwmb.willPushPWMBadge\n          ? `inset(0 ${pwmb.PWM_BADGE_SPACE_WIDTH} 0 0)`\n          : undefined,\n        height: '100%',\n        display: 'flex',\n        textAlign,\n        opacity: '1', // Mandatory for iOS hold-paste\n        color: 'transparent',\n        pointerEvents: 'all',\n        background: 'transparent',\n        caretColor: 'transparent',\n        border: '0 solid transparent',\n        outline: '0 solid transparent',\n        boxShadow: 'none',\n        lineHeight: '1',\n        letterSpacing: '-.5em',\n        fontSize: 'var(--root-height)',\n        fontFamily: 'monospace',\n        fontVariantNumeric: 'tabular-nums',\n        // letterSpacing: '-1em',\n        // transform: 'scale(1.5)',\n        // paddingRight: '100%',\n        // paddingBottom: '100%',\n        // debugging purposes\n        // inset: undefined,\n        // position: undefined,\n        // color: 'black',\n        // background: 'white',\n        // opacity: '1',\n        // caretColor: 'black',\n        // padding: '0',\n        // letterSpacing: 'unset',\n        // fontSize: 'unset',\n        // paddingInline: '.5rem',\n      }),\n      [pwmb.PWM_BADGE_SPACE_WIDTH, pwmb.willPushPWMBadge, textAlign],\n    )\n\n    /** Rendering */\n    const renderedInput = React.useMemo(\n      () => (\n        <input\n          autoComplete={props.autoComplete || 'one-time-code'}\n          {...props}\n          data-input-otp\n          data-input-otp-mss={mirrorSelectionStart}\n          data-input-otp-mse={mirrorSelectionEnd}\n          inputMode={inputMode}\n          pattern={regexp?.source}\n          style={inputStyle}\n          maxLength={maxLength}\n          value={value}\n          ref={inputRef}\n          onPaste={e => {\n            _pasteListener(e)\n            props.onPaste?.(e)\n          }}\n          onChange={_changeListener}\n          onMouseOver={e => {\n            setIsHoveringInput(true)\n            props.onMouseOver?.(e)\n          }}\n          onMouseLeave={e => {\n            setIsHoveringInput(false)\n            props.onMouseLeave?.(e)\n          }}\n          onFocus={e => {\n            _focusListener()\n            props.onFocus?.(e)\n          }}\n          onBlur={e => {\n            setIsFocused(false)\n            props.onBlur?.(e)\n          }}\n        />\n      ),\n      [\n        _changeListener,\n        _focusListener,\n        _pasteListener,\n        inputMode,\n        inputStyle,\n        maxLength,\n        mirrorSelectionEnd,\n        mirrorSelectionStart,\n        props,\n        regexp?.source,\n        value,\n      ],\n    )\n\n    const contextValue = React.useMemo<RenderProps>(() => {\n      return {\n        slots: Array.from({ length: maxLength }).map((_, slotIdx) => {\n          const isActive =\n            isFocused &&\n            mirrorSelectionStart !== null &&\n            mirrorSelectionEnd !== null &&\n            ((mirrorSelectionStart === mirrorSelectionEnd &&\n              slotIdx === mirrorSelectionStart) ||\n              (slotIdx >= mirrorSelectionStart && slotIdx < mirrorSelectionEnd))\n\n          const char = value[slotIdx] !== undefined ? value[slotIdx] : null\n\n          return {\n            char,\n            isActive,\n            hasFakeCaret: isActive && char === null,\n          }\n        }),\n        isFocused,\n        isHovering: !props.disabled && isHoveringInput,\n      }\n    }, [\n      isFocused,\n      isHoveringInput,\n      maxLength,\n      mirrorSelectionEnd,\n      mirrorSelectionStart,\n      props.disabled,\n      value,\n    ])\n\n    const renderedChildren = React.useMemo(() => {\n      if (render) {\n        return render(contextValue)\n      }\n      return (\n        <OTPInputContext.Provider value={contextValue}>\n          {children}\n        </OTPInputContext.Provider>\n      )\n    }, [children, contextValue, render])\n\n    return (\n      <>\n        {noScriptCSSFallback !== null && (\n          <noscript>\n            <style>{noScriptCSSFallback}</style>\n          </noscript>\n        )}\n\n        <div\n          ref={containerRef}\n          data-input-otp-container\n          style={rootStyle}\n          className={containerClassName}\n        >\n          {renderedChildren}\n\n          <div\n            style={{\n              position: 'absolute',\n              inset: 0,\n              pointerEvents: 'none',\n            }}\n          >\n            {renderedInput}\n          </div>\n        </div>\n      </>\n    )\n  },\n)\nOTPInput.displayName = 'Input'\n\nfunction safeInsertRule(sheet: CSSStyleSheet, rule: string) {\n  try {\n    sheet.insertRule(rule)\n  } catch {\n    console.error('input-otp could not insert CSS rule:', rule)\n  }\n}\n\n// Decided to go with <noscript>\n// instead of `scripting` CSS media query\n// because it's a fallback for initial page load\n// and the <script> tag won't be loaded\n// unless the user has JS disabled.\nconst NOSCRIPT_CSS_FALLBACK = `\n[data-input-otp] {\n  --nojs-bg: white !important;\n  --nojs-fg: black !important;\n\n  background-color: var(--nojs-bg) !important;\n  color: var(--nojs-fg) !important;\n  caret-color: var(--nojs-fg) !important;\n  letter-spacing: .25em !important;\n  text-align: center !important;\n  border: 1px solid var(--nojs-fg) !important;\n  border-radius: 4px !important;\n  width: 100% !important;\n}\n@media (prefers-color-scheme: dark) {\n  [data-input-otp] {\n    --nojs-bg: black !important;\n    --nojs-fg: white !important;\n  }\n}`\n","import * as React from 'react'\n\nexport function usePrevious<T>(value: T) {\n  const ref = React.useRef<T>()\n  React.useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","export function syncTimeouts(cb: (...args: any[]) => unknown): number[] {\n  const t1 = setTimeout(cb, 0) // For faster machines\n  const t2 = setTimeout(cb, 1_0)\n  const t3 = setTimeout(cb, 5_0)\n  return [t1, t2, t3]\n}\n","\"use client\";\nimport { keyframes } from \"@emotion/react\";\nimport { OTPInput as InputOTP, type SlotProps } from \"input-otp\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport {\n  fontSize,\n  radius,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport { StyledDiv } from \"../design-system/elements.js\";\nimport { Container } from \"./basic.js\";\n\n/**\n * @internal\n */\nexport function OTPInput(props: {\n  digits: number;\n  isInvalid?: boolean;\n  value: string;\n  setValue: (value: string) => void;\n  onEnter: () => void;\n}) {\n  return (\n    <OTPInputContainer>\n      <InputOTP\n        onComplete={() => {\n          props.onEnter();\n        }}\n        maxLength={6}\n        value={props.value}\n        render={({ slots }) => (\n          <Container flex=\"row\" gap=\"xs\" center=\"both\">\n            {slots.map((slot, idx) => (\n              // biome-ignore lint/suspicious/noArrayIndexKey: index is the only valid key here\n              <Slot key={idx} {...slot} isInvalid={props.isInvalid} />\n            ))}\n          </Container>\n        )}\n        onChange={(newValue) => {\n          props.setValue(newValue);\n        }}\n      />\n    </OTPInputContainer>\n  );\n}\n\nconst OTPInputContainer = /* @__PURE__ */ StyledDiv({\n  \"& input\": {\n    maxWidth: \"100%\",\n  },\n});\n\nfunction Slot(props: SlotProps & { isInvalid?: boolean }) {\n  return (\n    <OTPInputBox data-active={props.isActive} data-error={props.isInvalid}>\n      {props.char !== null && <div>{props.char}</div>}\n      {props.hasFakeCaret && <FakeCaret />}\n    </OTPInputBox>\n  );\n}\n\nconst caretBlink = keyframes`\n  0%, 100% {\n    opacity: 0;\n  },\n  50% {\n    opacity: 1;\n  }\n  `;\n\nconst FakeCaret = StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    inset: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    animation: `${caretBlink} 1s infinite`,\n    \"&::before\": {\n      content: \"''\",\n      display: \"block\",\n      width: \"1.5px\",\n      height: \"1em\",\n      backgroundColor: theme.colors.primaryText,\n    },\n  };\n});\n\nconst OTPInputBox = /* @__PURE__ */ StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    position: \"relative\",\n    width: \"40px\",\n    height: \"40px\",\n    textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: fontSize.md,\n    padding: spacing.xs,\n    boxSizing: \"border-box\",\n    transition: \"color 200ms ease\",\n    border: `2px solid ${theme.colors.borderColor}`,\n    \"&[data-active='true']\": {\n      borderColor: theme.colors.accentText,\n    },\n    color: theme.colors.primaryText,\n    borderRadius: radius.lg,\n    \"&[data-error='true']\": {\n      borderColor: theme.colors.danger,\n    },\n  };\n});\n","\"use client\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport type { SendEmailOtpReturnType } from \"../../../../wallets/in-app/core/authentication/type.js\";\nimport { preAuthenticate } from \"../../../../wallets/in-app/web/lib/auth/index.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize } from \"../../../core/design-system/index.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { FadeIn } from \"../../ui/components/FadeIn.js\";\nimport { OTPInput } from \"../../ui/components/OTPInput.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container, Line, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { StyledButton } from \"../../ui/design-system/elements.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\n\ntype VerificationStatus =\n  | \"verifying\"\n  | \"invalid\"\n  | \"valid\"\n  | \"idle\"\n  | \"payment_required\";\ntype AccountStatus = \"sending\" | SendEmailOtpReturnType | \"error\";\ntype ScreenToShow = \"base\" | \"enter-password-or-recovery-code\";\n\n/**\n * @internal\n */\nexport function InAppWalletOTPLoginUI(props: {\n  userInfo: { email: string } | { phone: string };\n  wallet: Wallet<\"inApp\">;\n  locale: InAppWalletLocale;\n  done: () => void;\n  goBack?: () => void;\n}) {\n  const { wallet, done, goBack, userInfo } = props;\n  const { client, chain, connectModal } = useConnectUI();\n  const isWideModal = connectModal.size === \"wide\";\n  const locale = props.locale;\n  const [otpInput, setOtpInput] = useState(\"\");\n  const [verifyStatus, setVerifyStatus] = useState<VerificationStatus>(\"idle\");\n  const [accountStatus, setAccountStatus] = useState<AccountStatus>(\"sending\");\n\n  const [screen] = useState<ScreenToShow>(\"base\");\n\n  const sendEmailOrSms = useCallback(async () => {\n    setOtpInput(\"\");\n    setVerifyStatus(\"idle\");\n    setAccountStatus(\"sending\");\n\n    try {\n      if (\"email\" in userInfo) {\n        const status = await preAuthenticate({\n          email: userInfo.email,\n          strategy: \"email\",\n          client,\n        });\n        setAccountStatus(status);\n      } else if (\"phone\" in userInfo) {\n        const status = await preAuthenticate({\n          phoneNumber: userInfo.phone,\n          strategy: \"phone\",\n          client,\n        });\n        setAccountStatus(status);\n      } else {\n        throw new Error(\"Invalid userInfo\");\n      }\n    } catch (e) {\n      console.error(e);\n      setVerifyStatus(\"idle\");\n      setAccountStatus(\"error\");\n    }\n  }, [client, userInfo]);\n\n  async function connect(otp: string) {\n    if (\"email\" in userInfo) {\n      await wallet.connect({\n        chain,\n        strategy: \"email\",\n        email: userInfo.email,\n        verificationCode: otp,\n        client,\n      });\n      await setLastAuthProvider(\"email\", webLocalStorage);\n    } else if (\"phone\" in userInfo) {\n      await wallet.connect({\n        chain,\n        strategy: \"phone\",\n        phoneNumber: userInfo.phone,\n        verificationCode: otp,\n        client,\n      });\n      await setLastAuthProvider(\"phone\", webLocalStorage);\n    } else {\n      throw new Error(\"Invalid userInfo\");\n    }\n  }\n\n  const verify = async (otp: string) => {\n    if (typeof accountStatus !== \"object\" || otp.length !== 6) {\n      return;\n    }\n\n    setVerifyStatus(\"idle\");\n\n    if (typeof accountStatus !== \"object\") {\n      return;\n    }\n\n    if (!wallet) {\n      return;\n    }\n\n    try {\n      setVerifyStatus(\"verifying\");\n\n      const needsRecoveryCode =\n        accountStatus.recoveryShareManagement === \"USER_MANAGED\" &&\n        (accountStatus.isNewUser || accountStatus.isNewDevice);\n\n      // USER_MANAGED\n      if (needsRecoveryCode) {\n        if (accountStatus.isNewUser) {\n          try {\n            await connect(otp);\n          } catch (e) {\n            if (e instanceof Error && e.message.includes(\"encryption key\")) {\n              // setScreen(\"create-password\");\n            } else {\n              throw e;\n            }\n          }\n        } else {\n          try {\n            // verifies otp for UI feedback\n            await connect(otp);\n          } catch (e) {\n            if (e instanceof Error && e.message.includes(\"encryption key\")) {\n              // TODO: do we need this?\n              // setScreen(\"enter-password-or-recovery-code\");\n            } else {\n              throw e;\n            }\n          }\n        }\n      }\n\n      // AWS_MANAGED\n      else {\n        // verifies otp for UI feedback\n        await connect(otp);\n        done();\n      }\n\n      setVerifyStatus(\"valid\");\n    } catch (e) {\n      if (\n        e instanceof Error &&\n        e?.message?.includes(\"PAYMENT_METHOD_REQUIRED\")\n      ) {\n        setVerifyStatus(\"payment_required\");\n      } else {\n        setVerifyStatus(\"invalid\");\n      }\n      console.error(\"Authentication Error\", e);\n    }\n  };\n\n  // send email on mount\n  const emailSentOnMount = useRef(false);\n  useEffect(() => {\n    if (!emailSentOnMount.current) {\n      emailSentOnMount.current = true;\n      sendEmailOrSms();\n    }\n  }, [sendEmailOrSms]);\n\n  if (screen === \"base\") {\n    return (\n      <Container fullHeight flex=\"column\" animate=\"fadein\">\n        <Container p=\"lg\">\n          <ModalHeader title={locale.signIn} onBack={goBack} />\n        </Container>\n\n        <Container expand flex=\"column\" center=\"y\">\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <Container flex=\"column\" center=\"x\" px=\"lg\">\n              {!isWideModal && <Spacer y=\"xl\" />}\n              <Text>{locale.emailLoginScreen.enterCodeSendTo}</Text>\n              <Spacer y=\"sm\" />\n              <Text color=\"primaryText\">\n                {\"email\" in userInfo ? userInfo.email : userInfo.phone}\n              </Text>\n              <Spacer y=\"xl\" />\n            </Container>\n\n            <OTPInput\n              isInvalid={verifyStatus === \"invalid\"}\n              digits={6}\n              value={otpInput}\n              setValue={(value) => {\n                setOtpInput(value);\n                setVerifyStatus(\"idle\"); // reset error\n              }}\n              onEnter={() => {\n                verify(otpInput);\n              }}\n            />\n\n            {verifyStatus === \"invalid\" && (\n              <FadeIn>\n                <Spacer y=\"md\" />\n                <Text size=\"sm\" color=\"danger\" center>\n                  {locale.emailLoginScreen.invalidCode}\n                </Text>\n              </FadeIn>\n            )}\n\n            {verifyStatus === \"payment_required\" && (\n              <FadeIn>\n                <Spacer y=\"md\" />\n                <Text size=\"sm\" color=\"danger\" center>\n                  {locale.maxAccountsExceeded}\n                </Text>\n              </FadeIn>\n            )}\n\n            <Spacer y=\"xl\" />\n\n            <Container px={isWideModal ? \"xxl\" : \"lg\"}>\n              {verifyStatus === \"verifying\" ? (\n                <>\n                  <Container flex=\"row\" center=\"x\" animate=\"fadein\">\n                    <Spinner size=\"lg\" color=\"accentText\" />\n                  </Container>\n                </>\n              ) : (\n                <Container animate=\"fadein\" key=\"btn-container\">\n                  <Button\n                    onClick={() => verify(otpInput)}\n                    variant=\"accent\"\n                    type=\"submit\"\n                    style={{\n                      width: \"100%\",\n                    }}\n                  >\n                    {locale.emailLoginScreen.verify}\n                  </Button>\n                </Container>\n              )}\n            </Container>\n\n            <Spacer y=\"xl\" />\n\n            {!isWideModal && <Line />}\n\n            <Container p={isWideModal ? undefined : \"lg\"}>\n              {accountStatus === \"error\" && (\n                <>\n                  <Text size=\"sm\" center color=\"danger\">\n                    {locale.emailLoginScreen.failedToSendCode}\n                  </Text>\n                </>\n              )}\n\n              {accountStatus === \"sending\" && (\n                <Container\n                  flex=\"row\"\n                  center=\"both\"\n                  gap=\"xs\"\n                  style={{\n                    textAlign: \"center\",\n                  }}\n                >\n                  <Text size=\"sm\">{locale.emailLoginScreen.sendingCode}</Text>\n                  <Spinner size=\"xs\" color=\"secondaryText\" />\n                </Container>\n              )}\n\n              {typeof accountStatus === \"object\" && (\n                <LinkButton onClick={sendEmailOrSms} type=\"button\">\n                  {locale.emailLoginScreen.resendCode}\n                </LinkButton>\n              )}\n            </Container>\n          </form>\n        </Container>\n      </Container>\n    );\n  }\n\n  return null;\n}\n\nconst LinkButton = /* @__PURE__ */ StyledButton(() => {\n  const theme = useCustomTheme();\n  return {\n    all: \"unset\",\n    color: theme.colors.accentText,\n    fontSize: fontSize.sm,\n    cursor: \"pointer\",\n    textAlign: \"center\",\n    fontWeight: 500,\n    width: \"100%\",\n    \"&:hover\": {\n      color: theme.colors.primaryText,\n    },\n  };\n});\n","import type { IconFC } from \"./types.js\";\n\nexport const FingerPrintIcon: IconFC = (props) => {\n  return (\n    <svg\n      width={props.size}\n      height={props.size}\n      viewBox=\"0 0 36 36\"\n      fill=\"none\"\n      aria-hidden=\"true\"\n    >\n      <path\n        d=\"M18.0001 15C17.2045 15 16.4414 15.3161 15.8788 15.8787C15.3162 16.4413 15.0001 17.2044 15.0001 18C15.0001 19.53 14.8501 21.765 14.6101 24\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M21.0002 19.6801C21.0002 23.2501 21.0002 29.2501 19.5002 33.0001\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M25.9348 31.53C26.1148 30.63 26.5798 28.08 26.6848 27\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M2.99976 18C2.99976 14.8518 3.99032 11.7833 5.83112 9.22935C7.67193 6.67536 10.2697 4.76531 13.2563 3.76975C16.243 2.77419 19.4672 2.74359 22.4723 3.6823C25.4773 4.621 28.1108 6.48141 29.9998 9\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M2.99976 24H3.01628\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M32.7 24C33 21 32.8965 15.969 32.7 15\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M7.49976 29.25C8.24976 27 8.99976 22.5 8.99976 18C8.99824 16.9783 9.17071 15.9638 9.50976 15\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12.9751 33C13.2901 32.01 13.6501 31.02 13.8301 30\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M13.5 10.2C14.8686 9.40988 16.4211 8.99401 18.0014 8.99426C19.5818 8.99452 21.1342 9.41088 22.5025 10.2015C23.8708 10.9921 25.0069 12.129 25.7964 13.498C26.5859 14.867 27.001 16.4197 27 18V21\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../exports/wallets.js\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport { hasStoredPasskey } from \"../../../../wallets/in-app/web/lib/auth/passkeys.js\";\nimport { iconSize } from \"../../../core/design-system/index.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { AccentFailIcon } from \"../../ui/ConnectWallet/icons/AccentFailIcon.js\";\nimport { FingerPrintIcon } from \"../../ui/ConnectWallet/icons/FingerPrintIcon.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\n\n// is passkey stored?\n// - login\n// else\n// - show login or signup options\n\nexport function InAppWalletPassKeyLogin(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  onBack?: () => void;\n}) {\n  const { client, connectModal, chain } = useConnectUI();\n  const { wallet, done } = props;\n  const [screen, setScreen] = useState<\n    \"select\" | \"login\" | \"loading\" | \"signup\"\n  >(\"loading\");\n\n  const triggered = useRef(false);\n  useEffect(() => {\n    if (triggered.current) {\n      return;\n    }\n\n    triggered.current = true;\n    hasStoredPasskey(client)\n      .then((isStored) => {\n        if (isStored) {\n          setScreen(\"login\");\n        } else {\n          setScreen(\"select\");\n        }\n      })\n      .catch(() => {\n        setScreen(\"select\");\n      });\n  }, [client]);\n\n  return (\n    <Container animate=\"fadein\" fullHeight flex=\"column\">\n      <Container p=\"lg\">\n        <ModalHeader title=\"Passkey\" onBack={props.onBack} />\n      </Container>\n\n      <Container\n        px={connectModal.size === \"wide\" ? \"xxl\" : \"lg\"}\n        expand\n        flex=\"column\"\n        center=\"y\"\n      >\n        <div>\n          {screen === \"loading\" && (\n            <>\n              <LoadingScreen />\n              <Spacer y=\"xxl\" />\n            </>\n          )}\n\n          {screen === \"select\" && (\n            <SelectLoginMethod\n              onSignin={() => {\n                setScreen(\"login\");\n              }}\n              onSignup={() => {\n                setScreen(\"signup\");\n              }}\n            />\n          )}\n\n          {screen === \"login\" && (\n            <LoginScreen\n              wallet={wallet}\n              client={client}\n              done={done}\n              onCreate={() => {\n                setScreen(\"signup\");\n              }}\n              chain={chain}\n            />\n          )}\n\n          {screen === \"signup\" && (\n            <SignupScreen\n              wallet={wallet}\n              client={client}\n              done={done}\n              chain={chain}\n            />\n          )}\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nfunction LoginScreen(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  client: ThirdwebClient;\n  onCreate: () => void;\n  chain?: Chain;\n}) {\n  const { wallet, done, client, chain } = props;\n  const [status, setStatus] = useState<\"loading\" | \"error\">(\"loading\");\n\n  async function login() {\n    setStatus(\"loading\");\n    try {\n      await wallet.connect({\n        client: client,\n        strategy: \"passkey\",\n        type: \"sign-in\",\n        chain,\n      });\n      await setLastAuthProvider(\"passkey\", webLocalStorage);\n      done();\n    } catch {\n      setStatus(\"error\");\n    }\n  }\n\n  const triggered = useRef(false);\n  useEffect(() => {\n    if (triggered.current) {\n      return;\n    }\n\n    triggered.current = true;\n    login();\n  });\n\n  if (status === \"loading\") {\n    return (\n      <LoadingState\n        title=\"Requesting Passkey\"\n        subtitle=\"A pop-up prompt will appear to sign-in and verify your passkey\"\n      />\n    );\n  }\n\n  if (status === \"error\") {\n    return (\n      <>\n        <ErrorState onTryAgain={login} title=\"Failed to Login\" />\n        <Spacer y=\"sm\" />\n        <Button variant=\"outline\" fullWidth onClick={props.onCreate}>\n          Create a new Passkey\n        </Button>\n        <Spacer y=\"lg\" />\n      </>\n    );\n  }\n\n  return null;\n}\n\nfunction SignupScreen(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  client: ThirdwebClient;\n  chain?: Chain;\n}) {\n  const { wallet, done, client, chain } = props;\n  const [status, setStatus] = useState<\"loading\" | \"error\">(\"loading\");\n\n  async function signup() {\n    setStatus(\"loading\");\n    try {\n      await wallet.connect({\n        client: client,\n        strategy: \"passkey\",\n        type: \"sign-up\",\n        chain,\n      });\n      await setLastAuthProvider(\"passkey\", webLocalStorage);\n      done();\n    } catch {\n      setStatus(\"error\");\n    }\n  }\n\n  const triggered = useRef(false);\n  useEffect(() => {\n    if (triggered.current) {\n      return;\n    }\n\n    triggered.current = true;\n    signup();\n  });\n\n  if (status === \"loading\") {\n    return (\n      <LoadingState\n        title=\"Creating Passkey\"\n        subtitle=\"A pop-up prompt will appear to sign-in and verify your passkey\"\n      />\n    );\n  }\n\n  if (status === \"error\") {\n    return (\n      <>\n        <ErrorState onTryAgain={signup} title=\"Failed to create passkey\" />\n        <Spacer y=\"lg\" />\n      </>\n    );\n  }\n\n  return null;\n}\n\nfunction SelectLoginMethod(props: {\n  onSignin: () => void;\n  onSignup: () => void;\n}) {\n  return (\n    <Container>\n      <Spacer y=\"xxl\" />\n      <Container flex=\"row\" center=\"x\" color=\"accentText\">\n        <FingerPrintIcon size={iconSize[\"4xl\"]} />\n      </Container>\n      <Spacer y=\"xl\" />\n      <Spacer y=\"xxl\" />\n\n      <Button variant=\"accent\" onClick={props.onSignup} fullWidth>\n        Create a Passkey\n      </Button>\n\n      <Spacer y=\"sm\" />\n      <Button variant=\"outline\" onClick={props.onSignin} fullWidth>\n        I have a Passkey\n      </Button>\n\n      <Spacer y=\"lg\" />\n    </Container>\n  );\n}\n\nfunction ErrorState(props: {\n  onTryAgain: () => void;\n  title: string;\n}) {\n  return (\n    <Container animate=\"fadein\">\n      <Spacer y=\"xxl\" />\n      <Container flex=\"row\" center=\"x\">\n        <AccentFailIcon size={iconSize[\"3xl\"]} />\n      </Container>\n      <Spacer y=\"lg\" />\n      <Text center color=\"primaryText\" size=\"lg\">\n        {props.title}\n      </Text>\n      <Spacer y=\"xl\" />\n      <Spacer y=\"xxl\" />\n      <Button variant=\"accent\" fullWidth onClick={props.onTryAgain}>\n        Try Again\n      </Button>\n    </Container>\n  );\n}\n\nfunction LoadingState(props: {\n  title: string;\n  subtitle: string;\n}) {\n  return (\n    <Container animate=\"fadein\">\n      <Spacer y=\"xxl\" />\n      <Container\n        flex=\"row\"\n        center=\"x\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        <Spinner size=\"4xl\" color=\"accentText\" />\n        <Container\n          color=\"accentText\"\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <FingerPrintIcon size={iconSize.xxl} />\n        </Container>\n      </Container>\n      <Spacer y=\"xl\" />\n      <Text center color=\"primaryText\" size=\"lg\">\n        {props.title}\n      </Text>\n      <Spacer y=\"md\" />\n      <Text multiline center>\n        {props.subtitle}\n      </Text>\n      <Spacer y=\"xxl\" />\n      <Spacer y=\"xxl\" />\n    </Container>\n  );\n}\n","\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport type { InAppWalletSocialAuth } from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { openOauthSignInWindow } from \"./openOauthSignInWindow.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\nimport type { InAppWalletSelectUIState } from \"./types.js\";\n\n/**\n * @internal\n */\nexport function InAppWalletSocialLogin(props: {\n  socialAuth: InAppWalletSocialAuth;\n  locale: InAppWalletLocale;\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n  state: InAppWalletSelectUIState;\n}) {\n  const ewLocale = props.locale;\n  const locale = ewLocale.socialLoginScreen;\n  const themeObj = useCustomTheme();\n  const { connectModal } = useConnectUI();\n  const [authError, setAuthError] = useState<string | undefined>(undefined);\n  const { done, wallet } = props;\n  const [status, setStatus] = useState<\"connecting\" | \"connected\" | \"error\">(\n    \"connecting\",\n  );\n  const { client, chain } = useConnectUI();\n\n  const handleSocialLogin = async () => {\n    try {\n      const socialWindow = openOauthSignInWindow(props.socialAuth, themeObj);\n\n      if (!socialWindow) {\n        throw new Error(`Failed to open ${props.socialAuth} login window`);\n      }\n\n      setStatus(\"connecting\");\n      await wallet.connect({\n        chain,\n        strategy: props.socialAuth,\n        openedWindow: socialWindow,\n        closeOpenedWindow: (openedWindow) => {\n          openedWindow.close();\n        },\n        client,\n      });\n      await setLastAuthProvider(props.socialAuth, webLocalStorage);\n      setStatus(\"connected\");\n      done();\n    } catch (e) {\n      setStatus(\"error\");\n      // TODO this only happens on 'retry' button click, not on initial login\n      // should pass auth error message to this component\n      if (\n        e instanceof Error &&\n        e?.message?.includes(\"PAYMENT_METHOD_REQUIRED\")\n      ) {\n        setAuthError(ewLocale.maxAccountsExceeded);\n      }\n      console.error(`Error sign in with ${props.socialAuth}`, e);\n    }\n  };\n\n  // const { setModalVisibility } = props.connectUIProps.screenConfig;\n  const socialLogin = props.state?.socialLogin;\n\n  const socialLoginStarted = useRef(false);\n  useEffect(() => {\n    if (socialLoginStarted.current) {\n      return;\n    }\n\n    if (socialLogin) {\n      socialLoginStarted.current = true;\n      setStatus(\"connecting\");\n      socialLogin.connectionPromise\n        .then(() => {\n          done();\n          setStatus(\"connected\");\n        })\n        .catch(() => {\n          setStatus(\"error\");\n        });\n    }\n  }, [done, socialLogin]);\n\n  return (\n    <Container animate=\"fadein\" flex=\"column\" fullHeight>\n      <Container\n        flex=\"column\"\n        expand\n        p=\"lg\"\n        style={{\n          paddingBottom: 0,\n        }}\n      >\n        {props.goBack && (\n          <ModalHeader title={locale.title} onBack={props.goBack} />\n        )}\n\n        {connectModal.size === \"compact\" ? <Spacer y=\"xl\" /> : null}\n\n        <Container\n          flex=\"column\"\n          center=\"both\"\n          expand\n          style={{\n            textAlign: \"center\",\n            minHeight: \"250px\",\n          }}\n        >\n          {status !== \"error\" && (\n            <Container animate=\"fadein\">\n              <Text\n                color=\"primaryText\"\n                center\n                multiline\n                style={{\n                  maxWidth: \"250px\",\n                }}\n              >\n                {locale.instruction}\n              </Text>\n              <Spacer y=\"xl\" />\n              <Container center=\"x\" flex=\"row\">\n                <Spinner size=\"lg\" color=\"accentText\" />\n              </Container>\n\n              <Spacer y=\"xxl\" />\n            </Container>\n          )}\n\n          {status === \"error\" && (\n            <Container animate=\"fadein\">\n              <Text color=\"danger\">{locale.failed}</Text>\n              {authError && <Text color=\"danger\">{authError}</Text>}\n              <Spacer y=\"lg\" />\n              <Button variant=\"primary\" onClick={handleSocialLogin}>\n                {locale.retry}\n              </Button>\n              <Spacer y=\"xxl\" />\n            </Container>\n          )}\n        </Container>\n      </Container>\n    </Container>\n  );\n}\n","\"use client\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport {\n  useSelectionData,\n  useSetSelectionData,\n} from \"../../providers/wallet-ui-states-provider.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { InAppWalletFormUIScreen } from \"./InAppWalletFormUI.js\";\nimport { InAppWalletOTPLoginUI } from \"./InAppWalletOTPLoginUI.js\";\nimport { InAppWalletPassKeyLogin } from \"./InAppWalletPassKeyLogin.js\";\nimport { InAppWalletSocialLogin } from \"./InAppWalletSocialLogin.js\";\nimport type { InAppWalletSelectUIState } from \"./types.js\";\nimport { useInAppWalletLocale } from \"./useInAppWalletLocale.js\";\n\n/**\n *\n * @internal\n */\nfunction InAppWalletConnectUI(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n}) {\n  const data = useSelectionData();\n  const setSelectionData = useSetSelectionData();\n  const state = data as InAppWalletSelectUIState;\n  const localeQuery = useInAppWalletLocale();\n  const { connectModal } = useConnectUI();\n\n  if (!localeQuery.data) {\n    return <LoadingScreen />;\n  }\n\n  const goBackToMain =\n    connectModal.size === \"compact\"\n      ? props.goBack\n      : () => {\n          setSelectionData({});\n        };\n\n  const otpUserInfo = state?.emailLogin\n    ? { email: state.emailLogin }\n    : state?.phoneLogin\n      ? { phone: state.phoneLogin }\n      : undefined;\n\n  if (otpUserInfo) {\n    return (\n      <InAppWalletOTPLoginUI\n        userInfo={otpUserInfo}\n        locale={localeQuery.data}\n        done={props.done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n      />\n    );\n  }\n\n  if (state?.passkeyLogin) {\n    return (\n      <InAppWalletPassKeyLogin\n        wallet={props.wallet}\n        done={props.done}\n        onBack={goBackToMain}\n      />\n    );\n  }\n\n  if (state?.socialLogin) {\n    return (\n      <InAppWalletSocialLogin\n        socialAuth={state.socialLogin.type}\n        locale={localeQuery.data}\n        done={props.done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        state={state}\n      />\n    );\n  }\n\n  return (\n    <InAppWalletFormUIScreen\n      select={() => {}}\n      locale={localeQuery.data}\n      done={props.done}\n      goBack={props.goBack}\n      wallet={props.wallet}\n    />\n  );\n}\n\nexport default InAppWalletConnectUI;\n","import type { ThirdwebClient } from \"../../../../../client/client.js\";\nimport {\n  type AuthArgsType,\n  type AuthLoginReturnType,\n  type GetAuthenticatedUserParams,\n  type PreAuthArgsType,\n  UserWalletStatus,\n} from \"../../../core/authentication/type.js\";\nimport { getOrCreateInAppWalletConnector } from \"../../../core/wallet/in-app-core.js\";\n\n// ---- KEEP IN SYNC WITH /wallets/in-app/native/auth/index.ts ---- //\n// duplication needed for separate exports between web and native\n\n/**\n * @internal\n */\nasync function getInAppWalletConnector(client: ThirdwebClient) {\n  return getOrCreateInAppWalletConnector(client, async (client) => {\n    const { InAppWebConnector } = await import(\"../web-connector.js\");\n    return new InAppWebConnector({\n      client: client,\n    });\n  });\n}\n\n/**\n * Retrieves the authenticated user for the active in-app wallet.\n * @param options - The arguments for retrieving the authenticated user.\n * @returns The authenticated user if logged in and wallet initialized, otherwise undefined.\n * @example\n * ```ts\n * import { getAuthenticatedUser } from \"thirdweb/wallets/in-app\";\n *\n * const user = await getAuthenticatedUser({ client });\n * if (user) {\n *  console.log(user.walletAddress);\n * }\n * ```\n * @wallet\n */\nexport async function getAuthenticatedUser(\n  options: GetAuthenticatedUserParams,\n) {\n  const { client } = options;\n  const connector = await getInAppWalletConnector(client);\n  const user = await connector.getUser();\n  switch (user.status) {\n    case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n      return user;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Retrieves the authenticated user email for the active in-app wallet.\n * @param options - The arguments for retrieving the authenticated user.\n * @returns The authenticated user email if logged in and wallet initialized, otherwise undefined.\n * @example\n * ```ts\n * import { getUserEmail } from \"thirdweb/wallets/in-app\";\n *\n * const email = await getUserEmail({ client });\n * console.log(email);\n * ```\n * @wallet\n */\nexport async function getUserEmail(options: GetAuthenticatedUserParams) {\n  const user = await getAuthenticatedUser(options);\n  if (user && \"email\" in user.authDetails) {\n    return user.authDetails.email;\n  }\n  return undefined;\n}\n\n/**\n * Retrieves the authenticated user phone number for the active embedded wallet.\n * @param options - The arguments for retrieving the authenticated user.\n * @returns The authenticated user phone number if authenticated with phone number, otherwise undefined.\n * @example\n * ```ts\n * import { getUserPhoneNumber } from \"thirdweb/wallets/embedded\";\n *\n * const phoneNumber = await getUserPhoneNumber({ client });\n * console.log(phoneNumber);\n * ```\n * @wallet\n */\nexport async function getUserPhoneNumber(options: GetAuthenticatedUserParams) {\n  const user = await getAuthenticatedUser(options);\n  if (user && \"phoneNumber\" in user.authDetails) {\n    return user.authDetails.phoneNumber;\n  }\n  return undefined;\n}\n\n/**\n * Pre-authenticates the user based on the provided authentication strategy.\n * @param args - The arguments required for pre-authentication.\n * @returns A promise that resolves to the pre-authentication result.\n * @throws An error if the provided authentication strategy doesn't require pre-authentication.\n * @example\n * ```ts\n * import { preAuthenticate } from \"thirdweb/wallets/in-app\";\n *\n * const result = await preAuthenticate({\n *  client,\n *  strategy: \"email\",\n *  email: \"example@example.org\",\n * });\n * ```\n * @wallet\n */\nexport async function preAuthenticate(args: PreAuthArgsType) {\n  const connector = await getInAppWalletConnector(args.client);\n  return connector.preAuthenticate(args);\n}\n\n/**\n * Authenticates the user based on the provided authentication arguments.\n * @param args - The authentication arguments.\n * @returns A promise that resolves to the authentication result.\n * @example\n * ```ts\n * import { authenticate } from \"thirdweb/wallets/in-app\";\n *\n * const result = await authenticate({\n *  client,\n *  strategy: \"email\",\n *  email: \"example@example.org\",\n *  verificationCode: \"123456\",\n * });\n * ```\n * @wallet\n */\nexport async function authenticate(\n  args: AuthArgsType,\n): Promise<AuthLoginReturnType> {\n  const connector = await getInAppWalletConnector(args.client);\n  return connector.authenticate(args);\n}\n"],"names":["FadeIn","StyledDiv","animation","concat","fadeInAnimation","bt","Ot","Gt","join","xt","n","jt","m","v","Y","it","lt","ut","dt","g","value","r","onChange","s","maxLength","e","textAlign","u","pattern","h","inputMode","W","onComplete","B","pushPasswordManagerStrategy","z","containerClassName","q","noScriptCSSFallback","j","Lt","render","A","children","V","c","St","k","M","defaultValue","a","b","Z","current","ht","O","t","d","RegExp","i","K","J","isIOS","window","CSS","supports","call","X","prev","selectionStart","selectionEnd","selectionDirection","o","f","document","activeElement","N","$","I","l","S","w","y","D","P","E","T","length","yt","Dt","H","et","Ht","setSelectionRange","ft","mt","Ct","addEventListener","capture","Q","getElementById","createElement","id","head","appendChild","sheet","F","p","updateRootHeight","style","setProperty","clientHeight","_","ResizeObserver","observe","removeEventListener","disconnect","nt","ot","L","C","G","setTimeout","Pt","dispatchEvent","Event","x","_ref","containerRef","inputRef","isFocused","R","done","refocused","getBoundingClientRect","left","offsetWidth","top","offsetHeight","querySelectorAll","elementFromPoint","blur","focus","innerWidth","right","setInterval","clearInterval","clearTimeout","hasPWMBadge","willPushPWMBadge","PWM_BADGE_SPACE_WIDTH","wt","rt","currentTarget","slice","test","preventDefault","st","Math","min","ct","clipboardData","getData","Tt","position","cursor","disabled","userSelect","WebkitUserSelect","pointerEvents","at","inset","width","clipPath","height","display","opacity","color","background","caretColor","border","outline","boxShadow","lineHeight","letterSpacing","fontSize","fontFamily","fontVariantNumeric","It","Et","gt","autoComplete","source","ref","onPaste","onMouseOver","onMouseLeave","onFocus","onBlur","tt","slots","Array","from","map","char","isActive","hasFakeCaret","isHovering","Mt","Provider","className","insertRule","console","error","displayName","_templateObject","OTPInput","props","_jsx","OTPInputContainer","InputOTP","onEnter","Container","flex","gap","center","slot","idx","Slot","isInvalid","newValue","setValue","maxWidth","_jsxs","OTPInputBox","FakeCaret","caretBlink","keyframes","_taggedTemplateLiteral","theme","useCustomTheme","alignItems","justifyContent","content","backgroundColor","colors","primaryText","md","padding","spacing","xs","boxSizing","transition","borderColor","accentText","borderRadius","radius","lg","danger","InAppWalletOTPLoginUI","wallet","goBack","userInfo","client","chain","connectModal","useConnectUI","isWideModal","size","locale","otpInput","setOtpInput","useState","verifyStatus","setVerifyStatus","accountStatus","setAccountStatus","screen","sendEmailOrSms","useCallback","async","status","preAuthenticate","email","strategy","Error","phoneNumber","phone","connect","otp","verificationCode","setLastAuthProvider","webLocalStorage","verify","recoveryShareManagement","isNewUser","isNewDevice","message","includes","_e$message","emailSentOnMount","useRef","useEffect","fullHeight","animate","ModalHeader","title","signIn","onBack","expand","onSubmit","px","Spacer","Text","emailLoginScreen","enterCodeSendTo","digits","invalidCode","maxAccountsExceeded","_Fragment","Spinner","Button","onClick","variant","type","Line","undefined","failedToSendCode","sendingCode","LinkButton","resendCode","StyledButton","all","sm","fontWeight","FingerPrintIcon","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","InAppWalletPassKeyLogin","setScreen","triggered","hasStoredPasskey","then","isStored","catch","LoadingScreen","SelectLoginMethod","onSignin","onSignup","LoginScreen","onCreate","SignupScreen","setStatus","login","LoadingState","subtitle","ErrorState","onTryAgain","fullWidth","signup","iconSize","AccentFailIcon","transform","xxl","multiline","InAppWalletSocialLogin","_props$state","ewLocale","socialLoginScreen","themeObj","authError","setAuthError","socialLogin","state","socialLoginStarted","connectionPromise","paddingBottom","minHeight","instruction","failed","socialWindow","openOauthSignInWindow","socialAuth","openedWindow","closeOpenedWindow","close","retry","data","useSelectionData","setSelectionData","useSetSelectionData","localeQuery","useInAppWalletLocale","goBackToMain","otpUserInfo","emailLogin","phoneLogin","passkeyLogin","InAppWalletFormUIScreen","select","getInAppWalletConnector","getOrCreateInAppWalletConnector","InAppWebConnector","getAuthenticatedUser","options","connector","user","getUser","UserWalletStatus","LOGGED_IN_WALLET_INITIALIZED","getUserEmail","authDetails","getUserPhoneNumber","args"],"sourceRoot":""}